---
import Layout from "../../../../layouts/Layout.astro";
import Breadcrumbs from "../../../../../../src/Breadcrumbs.astro";
// import "../../../../styles/styles.scss";

const customCrumbs = [
  {
    text: "Custom Crumb 1",
    href: "#",
  },
  {
    text: "Custom Crumb 2",
    href: "#",
  },
  {
    text: "Custom Crumb 3",
    href: "#",
  },
];

const crumbsWithCustomAttributes = [
  {
    text: "Crumb with custom title",
    href: "#",
    title: "Custom title",
  },
  {
    text: "Crumb with custom data attribute",
    href: "#",
    "data-custom": "Custom data attribute",
  },
  {
    text: "Custom Crumb 3",
    href: "#",
  },
];

const customListItems = [
  { index: "last", "data-attribute": "Last page!" },
  {
    "data-attribute": "home",
    "aria-label": "Go to the home page",
  },
  {
    "data-attribute": "about",
    "aria-label": "Go to the about page",
  },
];

const customLastPart = [
  { index: "last", text: "Last page!" },
  {
    "data-link": "home",
    "aria-label": "Go to the home page",
    text: "Page 1",
  },
  {
    "data-link": "about",
    "aria-label": "Go to the about page",
    text: "Page 2",
  },
];
---

<Layout title="Welcome to Astro Breadcrumbs.">
  <main>
    <h1><span class="text-gradient">Astro</span> Breadcrumbs Examples</h1>

    <h2>Example 1 - Custom separator</h2>
    <Breadcrumbs indexText={"home"}>
      <!-- Add icon or text here -->
      <svg
        slot="separator"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </Breadcrumbs>

    <h2>Example 2 - Custom index and separator</h2>
    <Breadcrumbs>
      <!-- Add custom element for the first element (home icon?) -->
      <svg
        slot="index"
        aria-label="Home Page"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
        ></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg
      >

      <!-- Add icon or text here (chevron-right icon?) -->
      <svg
        slot="separator"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><polyline points="9 18 15 12 9 6"></polyline></svg
      >
    </Breadcrumbs>

    <h2>Example 3 - Custom breadcrumb list</h2>
    <Breadcrumbs crumbs={customCrumbs} />

    <h2>
      Example 4 - Custom breadcrumb list with custom attributes - And ellipsis
      styles
    </h2>
    <Breadcrumbs crumbs={crumbsWithCustomAttributes} schemaJsonScript={false} />

    <h2>
      Example 5 - Custom breadcrumb list with custom attributes - And wrap
      styles
    </h2>
    <Breadcrumbs
      crumbs={crumbsWithCustomAttributes}
      mainBemClass="c-breadcrumbs-wrap"
      schemaJsonScript={false}
    />
    <h2>Example 6 - Custom base url</h2>
    <Breadcrumbs customBaseUrl="my-new-base" />
    <h2>Example 7 - Without current</h2>
    <Breadcrumbs excludeCurrentPage={true} />
    <h2>Example 8 - customizeListElements</h2>
    <Breadcrumbs customizeListElements={customListItems} />
    <h2>Example 9 - customizeLinks</h2>
    <Breadcrumbs customizeLinks={customLastPart} />
  </main>
</Layout>
<style lang="scss">
  // <style lang="scss" define:vars={{ "color-breadcrumbs": "green" }}>
  // --color-breadcrumbs: blue;
  // @import "../../../../styles/styles.scss";

  :root {
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
  }

  h1 {
    margin: 2rem 0;
  }

  main {
    margin: auto;
    padding: 1em;
    max-width: 60ch;
  }

  .text-gradient {
    font-weight: 900;
    background-image: var(--astro-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100% 200%;
    background-position-y: 100%;
    border-radius: 0.4rem;
    animation: pulse 4s ease-in-out infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      background-position-y: 0%;
    }
    50% {
      background-position-y: 80%;
    }
  }

  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    background: #4f39fa;
    padding: 1rem;
    border-radius: 0.4rem;
    color: var(--color-bg);
  }

  .instructions code {
    font-size: 0.875em;
    border: 0.1em solid var(--color-border);
    border-radius: 4px;
    padding: 0.15em 0.25em;
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
